---
import MaskedSignature from "@/assets/maskedSignature.svg";
---

<section
  class="relative min-h-dvh bg-gradient-to-b from-black to-midnight flex items-center justify-center"
>
  <div
    class="flex flex-col justify-center items-center px-6 text-center w-full max-w-5xl"
  >
    <div class="mb-12 lg:mb-16" id="title-container">
      <h1
        class="text-6xl sm:text-8xl lg:text-9xl xl:text-[12rem] font-black text-smoke leading-none tracking-tighter mb-4 hero-glow hero-text"
        id="main-title"
      >
        AKUMU
      </h1>
      <h2
        class="text-4xl sm:text-6xl lg:text-7xl xl:text-8xl font-extralight text-smoke/90 leading-none tracking-widest hero-text"
        id="sub-title"
      >
        GALLERY
      </h2>
    </div>

    <div class="max-w-2xl mb-16" id="subtitle-container">
      <p
        class="text-lg sm:text-xl lg:text-2xl text-smoke/80 font-light leading-relaxed drop-shadow hero-text"
        id="description"
      >
        Where nightmares become art, and darkness finds its beauty
      </p>
    </div>

    <div class="flex items-center gap-6 mb-16" id="signature-container">
      <MaskedSignature
        class="w-48 lg:w-64 h-auto text-smoke/80"
        id="signature"
      />
    </div>

    <div class="absolute bottom-8 w-full" id="scroll-indicator">
      <div class="flex flex-col items-center text-smoke/60 mx-auto">
        <span class="text-sm mb-2 animate-pulse">SCROLL TO EXPLORE</span>
        <div class="w-px h-12 bg-gradient-to-b from-smoke/60 to-transparent">
        </div>
      </div>
    </div>
  </div>
</section>

<style>
  .hero-glow {
    filter: drop-shadow(0 0 30px rgba(255, 255, 255, 0.1));
  }

  .hero-text {
    opacity: 0;
    transform: scale(1.1);
  }

  #scroll-indicator {
    opacity: 0;
    transform: translateY(-20px);
  }
</style>

<script>
  import { gsap } from "gsap";

  const signature = ["#sig-path1", "#sig-path2", "#sig-path3", "#sig-path4"];
  const timeline = gsap.timeline();

  signature.forEach((p) => {
    const path = document.querySelector(p) as SVGPathElement;
    if (path && path.getTotalLength) {
      const length = path.getTotalLength();
      path.style.strokeDasharray = length.toString();
      path.style.strokeDashoffset = length.toString();
    }
  });

  timeline
    .to(".hero-text", {
      opacity: 1,
      scale: 1,
      duration: 1,
      ease: "power2.out",
      stagger: 0.1,
    })
    .to(
      "#sig-path1",
      {
        strokeDashoffset: 0,
        duration: 1.5,
        ease: "power2.out",
      },
      "-=0.2"
    )
    .to(
      "#sig-path2",
      { strokeDashoffset: 0, duration: 1, ease: "power1.inOut" },
      "-=0.3"
    )
    .to(
      "#sig-path3",
      { strokeDashoffset: 0, duration: 0.5, ease: "power2.inOut" },
      "-=0.2"
    )
    .to(
      "#sig-path4",
      { strokeDashoffset: 0, duration: 0.3, ease: "power1.out" },
      "-=0.1"
    )
    .to(
      "#scroll-indicator",
      {
        opacity: 1,
        y: 0,
        duration: 0.6,
        ease: "power1.inOut",
      },
      "-=0.1"
    );
</script>
